{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h2/Affairs.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","props","className","styles","message","avatar","src","alt","textWrapper","text","name","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","affairs","setFilter","defaultAffairs","HW2","useState","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","success","greeting","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","search","alert","HW3","setUsers","v1","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","key","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","label","checked","HW4","setText","showAlert","setChecked","column","blue","disabled","Header","Routes","HW5","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,YAAc,6BAA6B,KAAO,sBAAsB,MAAQ,yB,iBCAtKD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,0B,gBCA9DD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,QAAU,0BAA0B,MAAQ,0B,gBCApGD,EAAOC,QAAU,CAAC,WAAa,mCAAmC,WAAa,mCAAmC,MAAQ,gC,gBCA1HD,EAAOC,QAAU,CAAC,SAAW,gCAAgC,cAAgB,qCAAqC,MAAQ,+B,iBCA1HD,EAAOC,QAAU,CAAC,KAAO,kBAAkB,OAAS,oBAAoB,cAAgB,6B,gBCAxFD,EAAOC,QAAU,CAAC,QAAU,6BAA6B,IAAM,2B,iBCA/DD,EAAOC,QAAU,CAAC,IAAM,mB,iJC0BTC,EAjBsB,SAACC,GACpC,OACE,sBAAKC,UAAWC,IAAOC,QAAvB,UACE,qBAAKF,UAAWC,IAAOE,OAAvB,SACE,qBAAKC,IAAKL,EAAMI,OAAQE,IAAI,UAE9B,qBAAKL,UAAWC,IAAOK,YAAvB,SACE,sBAAKN,UAAWC,IAAOM,KAAvB,UACE,4BAAIR,EAAMS,OACV,4BAAIT,EAAMG,UACV,4BAAIH,EAAMU,gBCVdC,EACI,qFADJA,EAEE,cAFFA,EAGK,sBAHLA,EAIE,QAoBOC,MAjBf,WACE,OACE,gCACE,uBACA,6CACA,cAAC,EAAD,CACER,OAAQO,EACRF,KAAME,EACNR,QAASQ,EACTD,KAAMC,IAER,uBACA,2B,uBCLSE,MAdf,SAAgBb,GAKd,OACE,sBAAKC,UAAWC,IAAOY,OAAvB,UACE,8BAAMd,EAAMc,OAAOL,OACnB,8BAAMT,EAAMc,OAAOC,WACnB,8BAAK,wBAAQC,QARM,WACrBhB,EAAMiB,qBAAqBjB,EAAMc,OAAOI,MAOjC,qBCyBIC,MAjCf,SAAiBnB,GACf,IAAMoB,EAAgBpB,EAAMqB,KAAKC,KAAI,SAACC,GAAD,OACnC,cAAC,EAAD,CAEET,OAAQS,EACRN,qBAAsBjB,EAAMiB,sBAFvBM,EAAEL,QAmBX,OACE,sBAAKjB,UAAWC,IAAOsB,QAAvB,UACGJ,EACD,wBAAQJ,QAhBG,WACbhB,EAAMyB,UAAU,QAed,iBACA,wBAAQT,QAdI,WACdhB,EAAMyB,UAAU,SAad,kBACA,wBAAQT,QAZM,WAChBhB,EAAMyB,UAAU,WAWd,oBACA,wBAAQT,QAVG,WACbhB,EAAMyB,UAAU,QASd,qBC1BAC,EAAoC,CACxC,CAACR,IAAK,EAAGT,KAAM,QAASM,SAAU,QAClC,CAACG,IAAK,EAAGT,KAAM,QAASM,SAAU,OAClC,CAACG,IAAK,EAAGT,KAAM,QAASM,SAAU,OAClC,CAACG,IAAK,EAAGT,KAAM,OAAQM,SAAU,QACjC,CAACG,IAAK,EAAGT,KAAM,aAAcM,SAAU,WAmC1BY,MAtBf,WAAgB,IAAD,EACiBC,mBAA4BF,GAD7C,mBACNF,EADM,KACGK,EADH,OAEeD,mBAAqB,OAFpC,mBAENE,EAFM,KAEEL,EAFF,KAIPM,EAbqB,SAACP,EAA4BM,GACxD,MAAe,QAAXA,EAAyBN,EACjBA,EAAQM,QAAO,SAAAP,GAAC,OAAIA,EAAER,WAAae,KAWvBE,CAAcR,EAASM,GAG/C,OACE,gCACE,uBACA,6CACA,cAAC,EAAD,CACET,KAAMU,EACNN,UAAWA,EACXR,qBATuB,SAACC,GAAD,OAAiBW,EATpB,SAACL,EAA4BN,GACvD,OAAOM,EAAQM,QAAO,SAAAP,GAAC,OAAIA,EAAEL,MAAQA,KAQoBe,CAAaT,EAASN,OAW3E,uBACA,2B,wBCrBSgB,EAf+B,SAAC,GAEzC,IADHzB,EACE,EADFA,KAAM0B,EACJ,EADIA,gBAAiBC,EACrB,EADqBA,QAASC,EAC9B,EAD8BA,MAAOC,EACrC,EADqCA,WAElCC,EAAaF,EAAQG,IAAEH,MAAQG,IAAEC,QAEvC,OACE,sBAAKxC,UAAWuC,IAAEE,SAAlB,UACE,uBAAOC,MAAOlC,EAAMmC,SAAUT,EAAiBlC,UAAWsC,IAC1D,+BAAOF,IACP,wBAAQrB,QAASoB,EAAjB,iBACA,+BAAOE,QC0BEO,EAlCiD,SAAC,GAA8B,IAA7BC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,gBAAqB,EACpEnB,mBAAiB,IADmD,mBACrFnB,EADqF,KAC/EuC,EAD+E,OAElEpB,mBAAiB,IAFiD,mBAErFS,EAFqF,KAE9EY,EAF8E,KAqBtFX,EAAaQ,EAAMI,OAEzB,OACE,cAAC,EAAD,CACEzC,KAAMA,EACN0B,gBAtBoB,SAACgB,GACnBA,EAAEC,cAAcT,MAAMU,OAAO,OAC/BL,EAAQG,EAAEC,cAAcT,OACxBM,EAAS,MAETD,EAAQ,IACRC,EAAS,WAiBTb,QAdY,WACV3B,IACF6C,MAAM,UAAD,OAAW7C,EAAX,MACLsC,EAAgBtC,GAChBuC,EAAQ,MAWRX,MAAOA,EACPC,WAAYA,K,QCTHiB,MAvBf,WAAgB,IAAD,EACa3B,mBAA0B,IADvC,mBACNkB,EADM,KACCU,EADD,KAOb,OACE,gCACE,uBACA,6CAGA,cAAC,EAAD,CAAmBV,MAAOA,EAAOC,gBAVb,SAACtC,GACvB+C,EAAS,CAAC,CAACtC,IAAKuC,cAAMhD,KAAMA,IAApB,mBAA8BqC,QAWpC,uBAGA,2B,+BC6BSY,EA3C2C,SAAC,GAUtD,EARDC,KAQE,IAPFf,EAOC,EAPDA,SAAUgB,EAOT,EAPSA,aACVC,EAMC,EANDA,WAAYC,EAMX,EANWA,QACZzB,EAKC,EALDA,MACApC,EAIC,EAJDA,UAAW8D,EAIV,EAJUA,cAERC,EAEF,6GAeGC,EAAkB,UAAMzB,IAAEH,MAAR,YAAiB0B,GAAgC,IACnEG,EAAmB,UAAM7B,EAAQG,IAAE2B,WAAa3B,IAAE4B,WAA/B,YAA6CnE,GAEtE,OACE,qCACE,mCACE0D,KAAM,OACNf,SArBmB,SAACO,GACxBP,GACGA,EAASO,GAEZS,GAAgBA,EAAaT,EAAEC,cAAcT,QAkBzCkB,WAhBqB,SAACV,GAC1BU,GAAcA,EAAWV,GAEzBW,GACa,UAAVX,EAAEkB,KACFP,KAYC7D,UAAWiE,GAEPF,IAEL3B,GAAS,sBAAMpC,UAAWgE,EAAjB,SAAsC5B,Q,kCC3BvCiC,EAhBqC,SAAC,GAK/C,IAHEC,EAGH,EAHGA,IAAKtE,EAGR,EAHQA,UACF+D,EAEN,mCACKQ,EAAc,UAAMD,EAAM/B,IAAE+B,IAAM/B,IAAEiC,QAAtB,YAAiCxE,GAErD,OACI,oCACIA,UAAWuE,GACPR,K,iBC2BDU,EArCyC,SAAC,GASpD,EAPGf,KAOF,IANEf,EAMH,EANGA,SAAU+B,EAMb,EANaA,gBACV1E,EAKH,EALGA,UACA2E,GAIH,EALcb,cAKd,EAJGa,UAEGZ,EAEN,4FAYKE,EAAmB,UAAM1B,IAAEqC,SAAR,YAAoB5E,GAAwB,IAErE,OACI,wBAAOA,UAAWuC,IAAEsC,MAApB,UACI,mCACInB,KAAM,WACNf,SAjBa,SAACO,GAErBwB,GACDA,EAAgBxB,EAAEC,cAAc2B,SAG/BnC,GACDA,EAASO,IAWDlD,UAAWiE,GAEPF,IAEPY,GAAY,sBAAM3E,UAAWuC,IAAEuB,cAAnB,SAAmCa,QCoC7CI,MAzEf,WAAgB,IAAD,EACWpD,mBAAiB,IAD5B,mBACNpB,EADM,KACAyE,EADA,KAEP5C,EAAQ7B,EAAO,GAAK,QAEpB0E,EAAY,WACZ7C,EACFiB,MAAM,gFAENA,MAAM9C,IARG,EAYiBoB,oBAAkB,GAZnC,mBAYNmD,EAZM,KAYGI,EAZH,KAeb,OACE,gCACE,uBACA,6CAEA,sBAAKlF,UAAWuC,IAAE4C,OAAlB,UACE,cAAC,EAAD,CACEzC,MAAOnC,EACPoD,aAAcqB,EACdnB,QAASoB,EACT7C,MAAOA,IAIT,cAAC,EAAD,CACEpC,UAAWuC,IAAE6C,OAKf,cAAC,EAAD,sBAIA,cAAC,EAAD,CACEd,KAAG,EACHvD,QAASkE,EAFX,qBAOA,cAAC,EAAD,CAAaI,UAAQ,EAArB,sBAMA,cAAC,EAAD,CACEP,QAASA,EACTJ,gBAAiBQ,EAFnB,wBAQA,cAAC,EAAD,CAAeJ,QAASA,EAASnC,SA/ClB,SAACO,GAAD,OAAsCgC,EAAWhC,EAAEC,cAAc2B,eAkDlF,uBAKA,2BC/DSQ,MATf,WACI,OACI,mDCwBOC,MArBf,WACI,OACI,iDCUOC,MAff,WACI,OACI,gCAII,cAAC,EAAD,IAEA,cAAC,EAAD,QCUGC,MAdf,WACE,OACE,sBAAKzF,UAAWuC,IAAEkD,IAAlB,UACE,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCJcC,QACa,cAA7BC,OAAOC,SAASC,UAEa,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACrB,2DCZRC,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SDiIpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBC,MAAK,SAAAC,GACFA,EAAaC,gBAEhBC,OAAM,SAAAtE,GACHuE,QAAQvE,MAAMA,EAAMlC,c","file":"static/js/main.714fd754.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__8WR15\",\"avatar\":\"Message_avatar__3FT3j\",\"textWrapper\":\"Message_textWrapper__2eT6B\",\"text\":\"Message_text__2fXBO\",\"angle\":\"Message_angle__1T-oN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"affairs\":\"Affairs_affairs__HryGq\",\"affair\":\"Affairs_affair__179X1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greeting\":\"Greeting_greeting__21ydZ\",\"success\":\"Greeting_success__tXNvy\",\"error\":\"Greeting_error__1uvQ8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3XH9u\",\"errorInput\":\"SuperInputText_errorInput__3ei0N\",\"error\":\"SuperInputText_error__2J82S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__Imn1x\",\"spanClassName\":\"SuperCheckbox_spanClassName__1K9ch\",\"label\":\"SuperCheckbox_label__kF06l\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__2RJeg\",\"column\":\"HW4_column__2ZS4I\",\"testSpanError\":\"HW4_testSpanError___Mj8X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__-BXUG\",\"red\":\"SuperButton_red__1kaz_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__1Sc4o\"};","import React from 'react'\nimport styles from './Message.module.css'\n\ntype PropsType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nconst Message: React.FC<PropsType> = (props) => {\n  return (\n    <div className={styles.message}>\n      <div className={styles.avatar}>\n        <img src={props.avatar} alt=\"img\" />\n      </div>\n      <div className={styles.textWrapper}>\n        <div className={styles.text}>\n          <p>{props.name}</p>\n          <p>{props.message}</p>\n          <p>{props.time}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Message\n","import React from 'react'\nimport Message from './Message'\n\ntype messageDataType = {\n  avatar: string\n  name: string\n  message: string\n  time: string\n}\n\nconst messageData: messageDataType = {\n  avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\n  name: 'Jylia Angel',\n  message: 'Hello! How are you?',\n  time: '22:00',\n}\n\nfunction HW1() {\n  return (\n    <div>\n      <hr/>\n      <h2>homeworks 1</h2>\n      <Message\n        avatar={messageData.avatar}\n        name={messageData.name}\n        message={messageData.message}\n        time={messageData.time}\n      />\n      <hr/>\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW1\n","import React from 'react'\nimport {AffairType} from \"./HW2\";\nimport styles from \"./Affairs.module.css\"\n\ntype AffairPropsType = {\n  // key не нужно типизировать\n  affair: AffairType\n  deleteAffairCallback: (_id: number) => void\n}\n\nfunction Affair(props: AffairPropsType) {\n  const deleteCallback = () => {\n    props.deleteAffairCallback(props.affair._id)\n  }\n\n  return (\n    <div className={styles.affair}>\n      <div>{props.affair.name}</div>\n      <div>{props.affair.priority}</div>\n      <div><button onClick={deleteCallback}>X</button></div>\n    </div>\n  )\n}\n\nexport default Affair\n","import React from 'react'\nimport Affair from './Affair'\nimport {AffairType, FilterType} from './HW2'\nimport styles from \"./Affairs.module.css\"\n\ntype AffairsPropsType = { // need to fix any\n  data: Array<AffairType>\n  setFilter: (priority: FilterType) => void\n  deleteAffairCallback: (_key: number) => void\n}\n\nfunction Affairs(props: AffairsPropsType) {\n  const mappedAffairs = props.data.map((a: AffairType) => (\n    <Affair // should work\n      key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\n      affair={a}\n      deleteAffairCallback={props.deleteAffairCallback}\n    />\n  ))\n\n  const setAll = () => {\n    props.setFilter('all')\n  }\n  const setHigh = () => {\n    props.setFilter('high')\n  }\n  const setMiddle = () => {\n    props.setFilter('middle')\n  }\n  const setLow = () => {\n    props.setFilter('low')\n  }\n\n  return (\n    <div className={styles.affairs}>\n      {mappedAffairs}\n      <button onClick={setAll}>All</button>\n      <button onClick={setHigh}>High</button>\n      <button onClick={setMiddle}>Middle</button>\n      <button onClick={setLow}>Low</button>\n    </div>\n  )\n}\n\nexport default Affairs\n","import React, {useState} from 'react'\nimport Affairs from './Affairs'\n\n// types\nexport type AffairPriorityType = 'low' | 'middle' | 'high'\nexport type AffairType = {\n  _id: number\n  name: string\n  priority: string\n}\nexport type FilterType = 'all' | AffairPriorityType\n\n// constants\nconst defaultAffairs: Array<AffairType> = [\n  {_id: 1, name: 'React', priority: 'high'},\n  {_id: 2, name: 'anime', priority: 'low'},\n  {_id: 3, name: 'games', priority: 'low'},\n  {_id: 4, name: 'work', priority: 'high'},\n  {_id: 5, name: 'html & css', priority: 'middle'},\n]\n\n// pure helper functions\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\n  if (filter === 'all') return affairs\n  else return affairs.filter(a => a.priority === filter)// need to fix\n}\n\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\n  return affairs.filter(a => a._id !== _id)\n}\n\nfunction HW2() {\n  const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\n  const [filter, setFilter] = useState<FilterType>('all')\n\n  const filteredAffairs = filterAffairs(affairs, filter)\n  const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id)) // need to fix any\n\n  return (\n    <div>\n      <hr/>\n      <h2>homeworks 2</h2>\n      <Affairs\n        data={filteredAffairs}\n        setFilter={setFilter}\n        deleteAffairCallback={deleteAffairCallback}\n      />\n      <hr/>\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW2\n","import React, {ChangeEvent, InputHTMLAttributes} from 'react'\nimport s from './Greeting.module.css'\n\ntype GreetingPropsType = {\n  name: string\n  setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\n  addUser: () => void // need to fix any\n  error: string // need to fix any\n  totalUsers: number // need to fix any\n}\n\n// презентационная компонента (для верстальщика)\nconst Greeting: React.FC<GreetingPropsType> = (\n  {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\n) => {\n  const inputClass = error ? s.error : s.success // need to fix with (?:)\n\n  return (\n    <div className={s.greeting}>\n      <input value={name} onChange={setNameCallback} className={inputClass}/>\n      <span>{error}</span>\n      <button onClick={addUser}>add</button>\n      <span>{totalUsers}</span>\n    </div>\n  )\n}\n\nexport default Greeting\n","import React, {ChangeEvent, ChangeEventHandler, useState} from 'react'\nimport Greeting from './Greeting'\nimport {UserType} from \"./HW3\";\n\ntype GreetingContainerPropsType = {\n  users: Array<UserType> // need to fix any\n  addUserCallback: (name: string) => void // need to fix any\n}\n\n// более простой и понятный для новичков\n// function GreetingContainer(props: GreetingPropsType) {\n\n// более современный и удобный для про :)\n// уровень локальной логики\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\n  const [name, setName] = useState<string>('') // need to fix any\n  const [error, setError] = useState<string>('') // need to fix any\n\n  const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => { // need to fix any\n    if (e.currentTarget.value.search(/\\d/)) {\n      setName(e.currentTarget.value)\n      setError('')\n    } else {\n      setName('')\n      setError('Error')\n    } // need to fix\n  }\n  const addUser = () => {\n    if (name) {\n      alert(`Hello, ${name}!`) // need to fix\n      addUserCallback(name)\n      setName('')\n    }\n  }\n\n  const totalUsers = users.length // need to fix\n\n  return (\n    <Greeting\n      name={name}\n      setNameCallback={setNameCallback}\n      addUser={addUser}\n      error={error}\n      totalUsers={totalUsers}\n    />\n  )\n}\n\nexport default GreetingContainer\n","import React, {useState} from 'react'\nimport GreetingContainer from './GreetingContainer'\nimport {v1} from \"uuid\";\n\n// types\nexport type UserType = {\n  _id: string\n  name: string\n}\n\n// уровень работы с глобальными данными\nfunction HW3() {\n  const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\n\n  const addUserCallback = (name: string) => { // need to fix any\n    setUsers([{_id: v1(), name: name}, ...users]) // need to fix\n  }\n\n  return (\n    <div>\n      <hr/>\n      <h2>homeworks 3</h2>\n\n      {/*should work (должно работать)*/}\n      <GreetingContainer users={users} addUserCallback={addUserCallback}/>\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeGreeting/>*/}\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW3\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport s from './SuperInputText.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n  onChangeText?: (value: string) => void\n  onEnter?: () => void\n  error?: string\n  spanClassName?: string\n}\n\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\n  {\n    type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n    onChange, onChangeText,\n    onKeyPress, onEnter,\n    error,\n    className, spanClassName,\n\n    ...restProps// все остальные пропсы попадут в объект restProps\n  }\n) => {\n  const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange // если есть пропс onChange\n    && onChange(e) // то передать ему е (поскольку onChange не обязателен)\n\n    onChangeText && onChangeText(e.currentTarget.value)\n  }\n  const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n    onKeyPress && onKeyPress(e);\n\n    onEnter // если есть пропс onEnter\n    && e.key === 'Enter' // и если нажата кнопка Enter\n    && onEnter() // то вызвать его\n  }\n\n  const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : ''}`\n  const finalInputClassName = `${error ? s.errorInput : s.superInput} ${className}` // need to fix with (?:) and s.superInput\n\n  return (\n    <>\n      <input\n        type={'text'}\n        onChange={onChangeCallback}\n        onKeyPress={onKeyPressCallback}\n        className={finalInputClassName}\n\n        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n      />\n      {error && <span className={finalSpanClassName}>{error}</span>}\n    </>\n  )\n}\n\nexport default SuperInputText\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react'\nimport s from './SuperButton.module.css'\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    )\n}\n\nexport default SuperButton\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react'\nimport s from './SuperCheckbox.module.css'\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void\n    spanClassName?: string\n}\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        // сделайте так чтоб работал onChange и onChangeChecked\n      if(onChangeChecked) {\n        onChangeChecked(e.currentTarget.checked)\n      }\n\n      if(onChange) {\n        onChange(e)\n      }\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : ''}`\n\n    return (\n        <label className={s.label}>\n            <input\n                type={'checkbox'}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    )\n}\n\nexport default SuperCheckbox\n","import React, {ChangeEvent, useState} from 'react'\nimport SuperInputText from './common/c1-SuperInputText/SuperInputText'\nimport s from './HW4.module.css'\nimport SuperButton from './common/c2-SuperButton/SuperButton'\nimport SuperCheckbox from './common/c3-SuperCheckbox/SuperCheckbox'\n\nfunction HW4() {\n  const [text, setText] = useState<string>('')\n  const error = text ? '' : 'error'\n\n  const showAlert = () => {\n    if (error) {\n      alert('введите текст...')\n    } else {\n      alert(text) // если нет ошибки показать текст\n    }\n  }\n\n  const [checked, setChecked] = useState<boolean>(false)\n  const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked)\n\n  return (\n    <div>\n      <hr/>\n      <h2>homeworks 4</h2>\n\n      <div className={s.column}>\n        <SuperInputText\n          value={text}\n          onChangeText={setText}\n          onEnter={showAlert}\n          error={error}\n          // spanClassName={s.testSpanError}\n        />\n\n        <SuperInputText\n          className={s.blue} // проверьте, рабоет ли смешивание классов\n        />\n\n        {/*----------------------------------------------------*/}\n\n        <SuperButton>\n          default\n        </SuperButton>\n\n        <SuperButton\n          red // пропсу с булевым значением не обязательно указывать true\n          onClick={showAlert}\n        >\n          delete {/*// название кнопки попадёт в children*/}\n        </SuperButton>\n\n        <SuperButton disabled>\n          disabled\n        </SuperButton>\n\n        {/*----------------------------------------------------*/}\n\n        <SuperCheckbox\n          checked={checked}\n          onChangeChecked={setChecked}\n        >\n          some text {/*// этот текст попадёт в children*/}\n        </SuperCheckbox>\n\n        {/*// onChange тоже должен работать*/}\n        <SuperCheckbox checked={checked} onChange={testOnChange}/>\n      </div>\n\n      <hr/>\n      {/*для личного творчества, могу проверить*/}\n      {/*<AlternativeSuperInputText/>*/}\n      {/*<AlternativeSuperButton/>*/}\n      {/*<AlternativeSuperCheckbox/>*/}\n      <hr/>\n    </div>\n  )\n}\n\nexport default HW4\n","import React from 'react'\n\nfunction Header() {\n    return (\n        <div>\n            // add NavLinks\n\n        </div>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nexport const PATH = {\n    PRE_JUNIOR: '/pre-junior',\n    // add paths\n}\n\nfunction Routes() {\n    return (\n        <div>\n            {/*Switch выбирает первый подходящий роут*/}\n            {/*<Switch>*/}\n\n            {/*в начале мы попадаем на страницу '/' и переходим сразу на страницу PRE_JUNIOR*/}\n            {/*exact нужен чтоб указать полное совподение (что после '/' ничего не будет)*/}\n            {/*<Route path={'/'} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>*/}\n\n            {/*<Route path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>*/}\n                // add routes\n\n            {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\n            {/*<Route render={() => <Error404/>}/>*/}\n\n            {/*</Switch>*/}\n        </div>\n    )\n}\n\nexport default Routes\n","import React from 'react'\nimport Header from './Header'\nimport Routes from './Routes'\n\nfunction HW5() {\n    return (\n        <div>\n            {/*в gh-pages лучше работает HashRouter*/}\n            {/*<HashRouter>*/}\n\n            <Header/>\n\n            <Routes/>\n\n            {/*</HashRouter>*/}\n        </div>\n    )\n}\n\nexport default HW5\n","import React from 'react'\nimport s from './App.module.css'\nimport HW1 from '../../../p2-homeworks/h1/HW1'\nimport HW2 from \"../../../p2-homeworks/h2/HW2\";\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\n\nfunction App() {\n  return (\n    <div className={s.App}>\n      <h1>react homeworks:</h1>\n      <HW1/>\n      <HW2/>\n      <HW3/>\n      <HW4/>\n      <HW5/>\n\n    </div>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\ntype Config = {\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(\n            process.env.PUBLIC_URL,\n            window.location.href\n        )\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: {'Service-Worker': 'script'}\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            )\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './p1-main/m1-ui/u1-app/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}